//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PushManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PushManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("NotificationMessage", NotificationMessage);
		L.RegFunction("IOSNotificationMessage", IOSNotificationMessage);
		L.RegFunction("GetDeviceToken", GetDeviceToken);
		L.RegFunction("AddNotificationMessage", AddNotificationMessage);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NotificationMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			PushManager obj = (PushManager)ToLua.CheckObject(L, 1, typeof(PushManager));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.NotificationMessage(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IOSNotificationMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			PushManager obj = (PushManager)ToLua.CheckObject(L, 1, typeof(PushManager));
			string arg0 = ToLua.CheckString(L, 2);
			System.DateTime arg1 = (System.DateTime)ToLua.CheckObject(L, 3, typeof(System.DateTime));
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.IOSNotificationMessage(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceToken(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PushManager obj = (PushManager)ToLua.CheckObject(L, 1, typeof(PushManager));
			string o = obj.GetDeviceToken();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNotificationMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			PushManager obj = (PushManager)ToLua.CheckObject(L, 1, typeof(PushManager));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.AddNotificationMessage(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

