//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AvatarManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AvatarManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OpenCamera", OpenCamera);
		L.RegFunction("OpenPhoto", OpenPhoto);
		L.RegFunction("UploadAvatar", UploadAvatar);
		L.RegFunction("TryDownloadAvatar", TryDownloadAvatar);
		L.RegFunction("DownloadAvatarNoCache", DownloadAvatarNoCache);
		L.RegFunction("ClearCache", ClearCache);
		L.RegFunction("IsAvatarExsit", IsAvatarExsit);
		L.RegFunction("CheckAvatar", CheckAvatar);
		L.RegFunction("SaveTex", SaveTex);
		L.RegFunction("ChangeTex2DToSprite", ChangeTex2DToSprite);
		L.RegFunction("WriteTex2DToJPG", WriteTex2DToJPG);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			AvatarManager.OpenCamera(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenPhoto(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			AvatarManager.OpenPhoto(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UploadAvatar(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.UploadAvatar(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TryDownloadAvatar(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.TryDownloadAvatar(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadAvatarNoCache(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.DownloadAvatarNoCache(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearCache(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			obj.ClearCache();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsAvatarExsit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsAvatarExsit(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckAvatar(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.CheckAvatar(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveTex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
			obj.SaveTex(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeTex2DToSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture2D));
			UnityEngine.Sprite o = obj.ChangeTex2DToSprite(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteTex2DToJPG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			AvatarManager obj = (AvatarManager)ToLua.CheckObject(L, 1, typeof(AvatarManager));
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture2D));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.WriteTex2DToJPG(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

